{"version":3,"sources":["types/TodosCategory.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosCategory","TodoList","todos","selectedTodo","onSelect","className","length","map","id","title","completed","userId","cn","type","onClick","TodoFilter","selectValue","setSelectValue","query","setQuery","handleSelection","useCallback","e","target","value","Active","Completed","All","handleSubmit","preventDefault","onSubmit","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","todo","useState","user","setUser","isUserInfoLoaded","setIsUserInfoLoaded","useEffect","getUser","userFromServer","catch","error","Error","href","email","name","App","setTodos","setSelectedTodo","areTodosLoaded","setAreTodosLoaded","chooseUser","todosFromServer","filterTodoFunction","filter","lowerCasedTitle","toLowerCase","lowerCasedQuery","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.663cfcd9.chunk.js","sourcesContent":["export enum TodosCategory {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.length\n        ? todos.map(({\n          id,\n          title,\n          completed,\n          userId,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': id === selectedTodo?.id,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect({\n                  id,\n                  title,\n                  completed,\n                  userId,\n                })}\n              >\n                <span className=\"icon\">\n                  <span\n                    className={cn('far', {\n                      'fa-eye-slash': id === selectedTodo?.id,\n                      'fa-eye': id !== selectedTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n        : <tr><td>Nothing&#39;s match request</td></tr>}\n    </tbody>\n  </table>\n);\n","import React, { useCallback } from 'react';\nimport { TodosCategory } from '../../types/TodosCategory';\n\ninterface Props {\n  selectValue: string;\n  setSelectValue: React.Dispatch<React.SetStateAction<TodosCategory>>\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectValue,\n  setSelectValue,\n  query,\n  setQuery,\n}) => {\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSelection = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      switch (e.target.value) {\n        case TodosCategory.Active:\n          setSelectValue(TodosCategory.Active);\n          break;\n\n        case TodosCategory.Completed:\n          setSelectValue(TodosCategory.Completed);\n          break;\n\n        default:\n          setSelectValue(TodosCategory.All);\n          break;\n      }\n    },\n    [selectValue],\n  );\n\n  const clearInput = () => setQuery('');\n  const handleSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n    },\n    [setSelectValue],\n  );\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={handleSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          onChange={handleInputChange}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"clear input\"\n              onClick={clearInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  onClose,\n  todo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserInfoLoaded, setIsUserInfoLoaded] = useState(false);\n  const {\n    id,\n    completed,\n    title,\n    userId,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n        setIsUserInfoLoaded(true);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserInfoLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close todo info\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { TodosCategory } from './types/TodosCategory';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [areTodosLoaded, setAreTodosLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectValue, setSelectValue] = useState<TodosCategory>(\n    TodosCategory.All,\n  );\n\n  const chooseUser = useCallback((todo: Todo | null) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const filterTodos = () => {\n    const todosMatchedQuery = todos.filter(({ title }) => {\n      const lowerCasedTitle = title.toLowerCase();\n      const lowerCasedQuery = query.toLowerCase();\n\n      return lowerCasedTitle.includes(lowerCasedQuery);\n    });\n\n    return todosMatchedQuery.filter(todo => {\n      switch (selectValue) {\n        case TodosCategory.Active:\n          return !todo.completed;\n\n        case TodosCategory.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setAreTodosLoaded(true);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  const filterTodoFunction = filterTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectValue={selectValue}\n                setSelectValue={setSelectValue}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {areTodosLoaded\n                ? (\n                  <TodoList\n                    todos={filterTodoFunction}\n                    selectedTodo={selectedTodo}\n                    onSelect={chooseUser}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => chooseUser(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}